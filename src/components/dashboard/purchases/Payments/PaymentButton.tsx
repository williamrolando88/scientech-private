import { Button } from '@mui/material';
import { PAYMENT_INITIAL_VALUE } from '@src/lib/constants/payment';
import { DocumentRef } from '@src/types/documentReference';
import { Payment } from '@src/types/payment';
import { FormikConfig } from 'formik';
import { FC, useState } from 'react';
import PaymentModal from './PaymentModal';

interface Props {
  amount: number;
  purchaseDocumentId?: string;
  ref: DocumentRef;
}

const PaymentButton: FC<Props> = ({ amount, purchaseDocumentId, ref }) => {
  const [modalOpen, setModalOpen] = useState(false);
  const openModal = () => setModalOpen(true);
  const closeModal = () => setModalOpen(false);

  console.log(`This is purchase ${purchaseDocumentId}`);

  /**
   * TODO: Add submit handler method
   * This method should build the ref object
   *
   * The payment doc id must be generated by firestore
   *
   * The goal for the payment modal is to be reusable for the update
   * payment option
   *
   *
   */

  const handleSubmit: FormikConfig<Payment>['onSubmit'] = (values, actions) => {
    console.log(values);
    actions.setSubmitting(false);
  };

  return (
    <>
      <Button onClick={openModal}>Pagar</Button>
      <PaymentModal
        open={modalOpen}
        onClose={closeModal}
        onSubmit={handleSubmit}
        initialValue={{ ...PAYMENT_INITIAL_VALUE, amount }}
      />
    </>
  );
};

export default PaymentButton;
